/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.test;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.test.user.Detail;
import com.test.user.dto.User;
import com.test.user.service.UserService;

@RestController
@RequestMapping("/users")
public class SimpleSpringMVCController {
	
    UserService userService  ;
    @Autowired
	@Qualifier("userService")
	public void setUserService(UserService userService)
	{
		this.userService=userService;
	}
	@GetMapping("/")
	public String showHomePage() {
		
		return "Test";
	}
	
	@GetMapping("/getAllUsers")
    public List<User> getUsers() {
        List<User> listOfUsers = userService.getUser();
        return listOfUsers;
    }
	@GetMapping("/getUser")
    public User getUserById(@RequestParam int id) {
        return userService.getUser(id);
    }
	@PostMapping("/addUser")
    public Detail addUser(@RequestBody User user) {
		 userService.saveUser(user);
		 Detail detail = new Detail();
		 detail.setMessage("Inserted Successfuly");
		 return detail;
         
    }
    @PutMapping("/updateUser/{id}")
    public User updateUser(@PathVariable int id, @RequestBody User user) {
    	return userService.updateUser(id, user);
    }
	@DeleteMapping("/user/{id}")
	public String deleteUser(@PathVariable("id") int id) {
        userService.deleteUser(id);
        return "delete";
    }
	@GetMapping("/insert")
	 public ModelAndView insertUser() {
		ModelAndView modelView = new ModelAndView();		
	  	modelView.setViewName("/insertion");
	  	return modelView;
	 }
}
